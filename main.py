import os
from aiohttp import web
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_DOMAIN = os.getenv("WEBHOOK_DOMAIN")  # –Ω–∞–ø—Ä–∏–º–µ—Ä: https://yourapp.onrender.com
WEBHOOK_PATH = os.getenv("WEBHOOK_PATH", "/webhook")
WEBHOOK_URL = f"{WEBHOOK_DOMAIN}{WEBHOOK_PATH}"
PORT = int(os.getenv("PORT", 10000))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.text)
async def echo(message: Message):
    await message.answer(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {message.text}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è aiohttp
def create_app():
    app = web.Application()

    # –û—Ç–¥–∞—ë–º HTML-—Ñ–∞–π–ª –ø–æ –∫–æ—Ä–Ω–µ–≤–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É /
    app.router.add_get("/", lambda request: web.FileResponse("static/index.html"))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ Webhook –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º aiogram –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é aiohttp
    setup_application(app, dp)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    return app

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

# –û—á–∏—â–∞–µ–º Webhook –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
async def on_shutdown(app):
    await bot.delete_webhook()
    print("üõë Webhook —É–¥–∞–ª—ë–Ω")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    web.run_app(create_app(), port=PORT)
